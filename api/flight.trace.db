2024-06-26 15:11:04.577692-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]PASSENGER"; expected "PREPARE"; SQL statement:
PASSENGER [42001-224]
2024-06-26 15:11:12.774077-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]RESERVATION"; expected "ROLLBACK, REVOKE, RUNSCRIPT, RELEASE, REFRESH"; SQL statement:
RESERVATION [42001-224]
2024-06-26 15:11:13.726182-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]RESERVATION"; expected "ROLLBACK, REVOKE, RUNSCRIPT, RELEASE, REFRESH"; SQL statement:
RESERVATION [42001-224]
2024-06-26 15:11:14.968129-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]RESERVATION"; expected "ROLLBACK, REVOKE, RUNSCRIPT, RELEASE, REFRESH"; SQL statement:
RESERVATION [42001-224]
2024-06-26 15:11:17.060871-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]RESERVATION"; expected "ROLLBACK, REVOKE, RUNSCRIPT, RELEASE, REFRESH"; SQL statement:
RESERVATION [42001-224]
2024-06-26 15:11:19.310785-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]FLIGHT"; SQL statement:
FLIGHT [42000-224]
2024-06-26 15:11:23.439550-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]FLIGHT FLIGHT"; SQL statement:
FLIGHT FLIGHT [42000-224]
2024-06-26 15:11:24.281991-04:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "[*]FLIGHT FLIGHT"; SQL statement:
FLIGHT FLIGHT [42000-224]
2024-06-26 15:14:19.454436-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "PHONE_NUMBER" not found; SQL statement:
INSERT INTO Passenger (first_name, last_name, email, phone_number) VALUES ('John', 'Doe', 'john.doe@example.com', '123-456-7890'), ('Jane', 'Smith', 'jane.smith@example.com', '987-654-3210'), ('Michael', 'Johnson', 'michael.johnson@example.com', '555-123-4567'), ('Emily', 'Brown', 'emily.brown@example.com', '333-444-5555'), ('William', 'Jones', 'william.jones@example.com', '999-888-7777'), ('Olivia', 'Davis', 'olivia.davis@example.com', '222-111-0000'), ('James', 'Miller', 'james.miller@example.com', '777-666-5555'), ('Sophia', 'Wilson', 'sophia.wilson@example.com', '444-555-6666'), ('Alexander', 'Moore', 'alexander.moore@example.com', '111-222-3333'), ('Isabella', 'Taylor', 'isabella.taylor@example.com', '666-777-8888'), ('Ethan', 'Anderson', 'ethan.anderson@example.com', '888-999-0000'), ('Mia', 'Thomas', 'mia.thomas@example.com', '555-777-9999'), ('Noah', 'Jackson', 'noah.jackson@example.com', '111-222-3333'), ('Ava', 'White', 'ava.white@example.com', '999-888-7777'), ('Liam', 'Harris', 'liam.harris@example.com', '444-555-6666'), ('Emma', 'Martin', 'emma.martin@example.com', '777-666-5555'), ('Logan', 'Thompson', 'logan.thompson@example.com', '123-456-7890'), ('Sophie', 'Garcia', 'sophie.garcia@example.com', '987-654-3210'), ('Lucas', 'Martinez', 'lucas.martinez@example.com', '555-123-4567'), ('Chloe', 'Robinson', 'chloe.robinson@example.com', '333-444-5555'), ('Benjamin', 'Clark', 'benjamin.clark@example.com', '999-888-7777'), ('Aria', 'Lewis', 'aria.lewis@example.com', '222-111-0000'), ('Elijah', 'Walker', 'elijah.walker@example.com', '777-666-5555'), ('Zoe', 'Perez', 'zoe.perez@example.com', '444-555-6666'), ('William', 'Hall', 'william.hall@example.com', '111-222-3333'), ('Charlotte', 'Young', 'charlotte.young@example.com', '666-777-8888'), ('Mason', 'Allen', 'mason.allen@example.com', '888-999-0000'), ('Grace', 'King', 'grace.king@example.com', '555-777-9999'), ('Jacob', 'Scott', 'jacob.scott@example.com', '111-222-3333'), ('Lily', 'Green', 'lily.green@example.com', '999-888-7777'), ('Michael', 'Baker', 'michael.baker@example.com', '444-555-6666'), ('Amelia', 'Adams', 'amelia.adams@example.com', '777-666-5555'), ('Ella', 'Campbell', 'ella.campbell@example.com', '123-456-7890'), ('Matthew', 'Hill', 'matthew.hill@example.com', '987-654-3210'), ('Harper', 'Mitchell', 'harper.mitchell@example.com', '555-123-4567'), ('Jack', 'Roberts', 'jack.roberts@example.com', '333-444-5555'), ('Evelyn', 'Carter', 'evelyn.carter@example.com', '999-888-7777'), ('David', 'Morris', 'david.morris@example.com', '222-111-0000'), ('Sophia', 'Bailey', 'sophia.bailey@example.com', '777-666-5555'), ('Daniel', 'Cooper', 'daniel.cooper@example.com', '444-555-6666'), ('Madison', 'Richardson', 'madison.richardson@example.com', '111-222-3333'), ('Jackson', 'Cox', 'jackson.cox@example.com', '666-777-8888'), ('Avery', 'Ward', 'avery.ward@example.com', '888-999-0000'), ('Alexander', 'Brooks', 'alexander.brooks@example.com', '555-777-9999'), ('Abigail', 'Russell', 'abigail.russell@example.com', '111-222-3333'), ('Gabriel', 'Price', 'gabriel.price@example.com', '999-888-7777'), ('Sofia', 'Hughes', 'sofia.hughes@example.com', '444-555-6666') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:16:57.667529-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "PHONENUMBER" not found; SQL statement:
INSERT INTO Passenger (first_name, last_name, email, phonenumber) VALUES ('John', 'Doe', 'john.doe@example.com', '123-456-7890'), ('Jane', 'Smith', 'jane.smith@example.com', '987-654-3210'), ('Michael', 'Johnson', 'michael.johnson@example.com', '555-123-4567'), ('Emily', 'Brown', 'emily.brown@example.com', '333-444-5555'), ('William', 'Jones', 'william.jones@example.com', '999-888-7777'), ('Olivia', 'Davis', 'olivia.davis@example.com', '222-111-0000'), ('James', 'Miller', 'james.miller@example.com', '777-666-5555'), ('Sophia', 'Wilson', 'sophia.wilson@example.com', '444-555-6666'), ('Alexander', 'Moore', 'alexander.moore@example.com', '111-222-3333'), ('Isabella', 'Taylor', 'isabella.taylor@example.com', '666-777-8888'), ('Ethan', 'Anderson', 'ethan.anderson@example.com', '888-999-0000'), ('Mia', 'Thomas', 'mia.thomas@example.com', '555-777-9999'), ('Noah', 'Jackson', 'noah.jackson@example.com', '111-222-3333'), ('Ava', 'White', 'ava.white@example.com', '999-888-7777'), ('Liam', 'Harris', 'liam.harris@example.com', '444-555-6666'), ('Emma', 'Martin', 'emma.martin@example.com', '777-666-5555'), ('Logan', 'Thompson', 'logan.thompson@example.com', '123-456-7890'), ('Sophie', 'Garcia', 'sophie.garcia@example.com', '987-654-3210'), ('Lucas', 'Martinez', 'lucas.martinez@example.com', '555-123-4567'), ('Chloe', 'Robinson', 'chloe.robinson@example.com', '333-444-5555'), ('Benjamin', 'Clark', 'benjamin.clark@example.com', '999-888-7777'), ('Aria', 'Lewis', 'aria.lewis@example.com', '222-111-0000'), ('Elijah', 'Walker', 'elijah.walker@example.com', '777-666-5555'), ('Zoe', 'Perez', 'zoe.perez@example.com', '444-555-6666'), ('William', 'Hall', 'william.hall@example.com', '111-222-3333'), ('Charlotte', 'Young', 'charlotte.young@example.com', '666-777-8888'), ('Mason', 'Allen', 'mason.allen@example.com', '888-999-0000'), ('Grace', 'King', 'grace.king@example.com', '555-777-9999'), ('Jacob', 'Scott', 'jacob.scott@example.com', '111-222-3333'), ('Lily', 'Green', 'lily.green@example.com', '999-888-7777'), ('Michael', 'Baker', 'michael.baker@example.com', '444-555-6666'), ('Amelia', 'Adams', 'amelia.adams@example.com', '777-666-5555'), ('Ella', 'Campbell', 'ella.campbell@example.com', '123-456-7890'), ('Matthew', 'Hill', 'matthew.hill@example.com', '987-654-3210'), ('Harper', 'Mitchell', 'harper.mitchell@example.com', '555-123-4567'), ('Jack', 'Roberts', 'jack.roberts@example.com', '333-444-5555'), ('Evelyn', 'Carter', 'evelyn.carter@example.com', '999-888-7777'), ('David', 'Morris', 'david.morris@example.com', '222-111-0000'), ('Sophia', 'Bailey', 'sophia.bailey@example.com', '777-666-5555'), ('Daniel', 'Cooper', 'daniel.cooper@example.com', '444-555-6666'), ('Madison', 'Richardson', 'madison.richardson@example.com', '111-222-3333'), ('Jackson', 'Cox', 'jackson.cox@example.com', '666-777-8888'), ('Avery', 'Ward', 'avery.ward@example.com', '888-999-0000'), ('Alexander', 'Brooks', 'alexander.brooks@example.com', '555-777-9999'), ('Abigail', 'Russell', 'abigail.russell@example.com', '111-222-3333'), ('Gabriel', 'Price', 'gabriel.price@example.com', '999-888-7777'), ('Sofia', 'Hughes', 'sofia.hughes@example.com', '444-555-6666') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:20:37.374538-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "DEPARTURE_TIME" not found; SQL statement:
INSERT INTO Flight (flight_number, departure, destination, departure_time) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:22:23.279559-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:24:54.601951-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:27:05.168179-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:28:34.800533-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:29:50.828720-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:35:46.646094-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO Flight (flightNumber, departure, destination, schedule) VALUES ('AA123', 'New York', 'Los Angeles', '2024-07-01 08:00:00'), ('BB456', 'Chicago', 'San Francisco', '2024-07-02 09:30:00'), ('CC789', 'Dallas', 'Seattle', '2024-07-03 11:15:00'), ('DD012', 'Miami', 'Denver', '2024-07-04 13:45:00'), ('EE345', 'Atlanta', 'Houston', '2024-07-05 15:20:00'), ('FF678', 'Boston', 'Phoenix', '2024-07-06 17:10:00'), ('GG901', 'Las Vegas', 'Orlando', '2024-07-07 19:00:00'), ('HH234', 'San Diego', 'Portland', '2024-07-08 21:30:00'), ('II567', 'Minneapolis', 'Detroit', '2024-07-09 23:00:00'), ('JJ890', 'Charlotte', 'Raleigh', '2024-07-10 06:45:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
2024-06-26 15:58:21.015746-04:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLIGHTNUMBER" not found; SQL statement:
INSERT INTO FLIGHT (flightNumber, departure, destination, schedule) VALUES ('FN101', 'New York', 'Los Angeles', '2024-07-01T10:00:00'), ('FN102', 'Los Angeles', 'New York', '2024-07-02T11:00:00'), ('FN103', 'Chicago', 'San Francisco', '2024-07-03T12:00:00'), ('FN104', 'San Francisco', 'Chicago', '2024-07-04T13:00:00'), ('FN105', 'Miami', 'Seattle', '2024-07-05T14:00:00'), ('FN106', 'Seattle', 'Miami', '2024-07-06T15:00:00'), ('FN107', 'Dallas', 'Denver', '2024-07-07T16:00:00'), ('FN108', 'Denver', 'Dallas', '2024-07-08T17:00:00'), ('FN109', 'Atlanta', 'Houston', '2024-07-09T18:00:00'), ('FN110', 'Houston', 'Atlanta', '2024-07-10T19:00:00'), ('FN111', 'Phoenix', 'Las Vegas', '2024-07-11T10:00:00'), ('FN112', 'Las Vegas', 'Phoenix', '2024-07-12T11:00:00'), ('FN113', 'Boston', 'Washington, D.C.', '2024-07-13T12:00:00'), ('FN114', 'Washington, D.C.', 'Boston', '2024-07-14T13:00:00'), ('FN115', 'San Diego', 'Portland', '2024-07-15T14:00:00'), ('FN116', 'Portland', 'San Diego', '2024-07-16T15:00:00'), ('FN117', 'Minneapolis', 'Detroit', '2024-07-17T16:00:00'), ('FN118', 'Detroit', 'Minneapolis', '2024-07-18T17:00:00'), ('FN119', 'Philadelphia', 'Charlotte', '2024-07-19T18:00:00'), ('FN120', 'Charlotte', 'Philadelphia', '2024-07-20T19:00:00'), ('FN121', 'Denver', 'Salt Lake City', '2024-07-21T10:00:00'), ('FN122', 'Salt Lake City', 'Denver', '2024-07-22T11:00:00'), ('FN123', 'Houston', 'Austin', '2024-07-23T12:00:00'), ('FN124', 'Austin', 'Houston', '2024-07-24T13:00:00'), ('FN125', 'Las Vegas', 'Reno', '2024-07-25T14:00:00'), ('FN126', 'Reno', 'Las Vegas', '2024-07-26T15:00:00'), ('FN127', 'Seattle', 'Vancouver', '2024-07-27T16:00:00'), ('FN128', 'Vancouver', 'Seattle', '2024-07-28T17:00:00'), ('FN129', 'Chicago', 'Detroit', '2024-07-29T18:00:00'), ('FN130', 'Detroit', 'Chicago', '2024-07-30T19:00:00'), ('FN131', 'Dallas', 'San Antonio', '2024-07-31T10:00:00'), ('FN132', 'San Antonio', 'Dallas', '2024-08-01T11:00:00'), ('FN133', 'Miami', 'Orlando', '2024-08-02T12:00:00'), ('FN134', 'Orlando', 'Miami', '2024-08-03T13:00:00'), ('FN135', 'Phoenix', 'Albuquerque', '2024-08-04T14:00:00'), ('FN136', 'Albuquerque', 'Phoenix', '2024-08-05T15:00:00'), ('FN137', 'New York', 'Boston', '2024-08-06T16:00:00'), ('FN138', 'Boston', 'New York', '2024-08-07T17:00:00'), ('FN139', 'San Francisco', 'Seattle', '2024-08-08T18:00:00'), ('FN140', 'Seattle', 'San Francisco', '2024-08-09T19:00:00'), ('FN141', 'Los Angeles', 'San Diego', '2024-08-10T10:00:00'), ('FN142', 'San Diego', 'Los Angeles', '2024-08-11T11:00:00'), ('FN143', 'Atlanta', 'Miami', '2024-08-12T12:00:00'), ('FN144', 'Miami', 'Atlanta', '2024-08-13T13:00:00'), ('FN145', 'Houston', 'Dallas', '2024-08-14T14:00:00'), ('FN146', 'Dallas', 'Houston', '2024-08-15T15:00:00'), ('FN147', 'Phoenix', 'Denver', '2024-08-16T16:00:00'), ('FN148', 'Denver', 'Phoenix', '2024-08-17T17:00:00'), ('FN149', 'Chicago', 'Minneapolis', '2024-08-18T18:00:00'), ('FN150', 'Minneapolis', 'Chicago', '2024-08-19T19:00:00') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.project.airlinereservation.AirlineReservationSpringbootVueApplication.main(AirlineReservationSpringbootVueApplication.java:10)
